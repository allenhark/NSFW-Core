import Ws from 'App/Services/Ws'
import Event from '@ioc:Adonis/Core/Event'
Ws.boot()

Ws.io.use(async (socket, next) => {
  console.log("Query: ", socket.handshake.query);
  // return the result of next() to accept the connection.
  // if (socket.handshake.query.foo == "bar") {
  //   return next();
  // }

  console.log(socket.handshake.query.token)

  return next();

  // call next() with an Error if you need to reject the connection.
  // next(new Error('Authentication error'));
});

/**
 * Listen for incoming socket connections
 */
Ws.io.on('connection', (socket) => {

  //console.log('socket', socket.handshake)


  socket.on('my other event', (data) => {
    console.log(data)
  })

  Event.on('number', (num: any) => {
    console.log(num)
    socket.emit('number', num)
  })

  Event.on('end', (num: any) => {
    console.log('Ended')
    socket.emit('end', num)
  })

  Event.on('start', () => {
    console.log('Starting')
    socket.emit('start', true)
  })

  Event.on('players', (num: number) => {
    socket.emit('players', num)
  })

})


Ws.io.on('disconnect', (socket) => {

})
